{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAeF,SAASC,cAAc,yBACtCE,EAAcH,SAASC,cAAc,wBACrCG,EAAgBJ,SAASC,cAAc,0BAI7C,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAACN,E,MAAUC,IAEnBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAbOP,SAASC,cAAc,2BA0C/Bc,iBAAiB,SAxBZC,IACfA,EAAEC,iBAGF,MAAMC,GAAUd,EAAce,MAC9B,IAAIC,GAAalB,EAAaiB,MAC9B,MAAME,GAAYlB,EAAYgB,MAE9B,IAAK,IAAIG,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAChCjB,EAAciB,EAAGF,GAChBG,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEzEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBtB,QAAeC,MAAU,IAGzEa,GAAaC,EAGbtB,EAAO8B,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// Page elements\nconst formEl = document.querySelector('.form');\nconst delayInputEl = document.querySelector('input[name = \"delay\"]');\nconst stepInputEl = document.querySelector('input[name = \"step\"]');\nconst amountInputEl = document.querySelector('input[name = \"amount\"]');\nconst submitBtnEl = document.querySelector('button[type = \"submit\"]');\n\n// Promise creation\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay}); \n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n}\n\n// on Submit\nconst onSubmit = e => {\n  e.preventDefault(); \n\n  // converting a string to a number const number = +string\n  const amount = +amountInputEl.value;\n  let delayTime = +delayInputEl.value;\n  const stepTime = +stepInputEl.value;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayTime) \n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  \n  delayTime += stepTime;\n  }\n\n  formEl.reset();\n};\n\n// Event = submit\nsubmitBtnEl.addEventListener('click', onSubmit);"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayInputEl","$47d4ff9957288465$var$stepInputEl","$47d4ff9957288465$var$amountInputEl","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","amount","value","delayTime","stepTime","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.2a66910f.js.map"}