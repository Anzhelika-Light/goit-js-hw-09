{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAASC,SAASC,cAAc,SAChCC,EAAeF,SAASC,cAAc,yBACtCE,EAAcH,SAASC,cAAc,wBACrCG,EAAgBJ,SAASC,cAAc,0BAI7C,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAACN,WAAUC,UAEnBM,EAAO,CAACP,WAAUC,S,GAEnBA,E,IAbaP,SAASC,cAAc,2BA0C/Bc,iBAAiB,SAxBZ,SAAAC,GACfA,EAAEC,iBAOF,IAJA,IAAMC,GAAUd,EAAce,MAC1BC,GAAalB,EAAaiB,MACxBE,GAAYlB,EAAYgB,MAErBG,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAChCjB,EAAciB,EAAGF,GAChBG,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAEvEsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGvEa,GAAaC,EAGbtB,EAAOgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// Page elements\nconst formEl = document.querySelector('.form');\nconst delayInputEl = document.querySelector('input[name = \"delay\"]');\nconst stepInputEl = document.querySelector('input[name = \"step\"]');\nconst amountInputEl = document.querySelector('input[name = \"amount\"]');\nconst submitBtnEl = document.querySelector('button[type = \"submit\"]');\n\n// Promise creation\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay}); \n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n}\n\n// on Submit\nconst onSubmit = e => {\n  e.preventDefault(); \n\n  // converting a string to a number const number = +string\n  const amount = +amountInputEl.value;\n  let delayTime = +delayInputEl.value;\n  const stepTime = +stepInputEl.value;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayTime) \n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  \n  delayTime += stepTime;\n  }\n\n  formEl.reset();\n};\n\n// Event = submit\nsubmitBtnEl.addEventListener('click', onSubmit);"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayInputEl","$ce04d3a99e08e73b$var$stepInputEl","$ce04d3a99e08e73b$var$amountInputEl","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","amount","value","delayTime","stepTime","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.b1412cb7.js.map"}